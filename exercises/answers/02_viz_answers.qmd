---
title: "Visualize Data in R with ggplot2"
subtitle: "Exercises"
abstract: "These exercises are adapated in whole or in part based on the <i>Master the Tidyverse</i> work by Garrett Grolemund at RStudio.  \nCC BY Garrett Grolemund, RStudio ; BY-NC John Little"


date-modified: 'today'
date-format: long

format: 
  html:
    footer: "CC BY 4.0 John R Little"

license: CC BY    
---

```{r setup}
#| warning: false
#| message: false
library(tidyverse)
```

```{r}
mpg
```

## Your Turn 1

Run the code on the slide to make a graph. Pay strict attention to spelling, capitalization, and parentheses!

```{r}
ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy))
```

## Your Turn 2

Add `color`, `size`, `alpha`, and `shape` aesthetics to your graph. Experiment.

```{r fig.height=7}
mpg %>% 
  ggplot() +
  geom_point(mapping = aes(x = displ, y = hwy,
                           color = class,
                           size = cyl,
                           shape = drv,
                           alpha = hwy))
```

## Your Turn 3

Replace this scatterplot with one that draws boxplots. Use the cheatsheet. Try your best guess.

```{r}
mpg %>% 
  ggplot() + 
  geom_point(aes(class, hwy))

mpg %>% 
  ggplot() + 
  geom_boxplot(aes(class, hwy))
```

## Your Turn 4

Make a histogram of the `hwy` variable from `mpg`.

```{r}
mpg %>% 
  ggplot() +
  geom_histogram(aes(hwy))
```

```{r}
mpg %>% 
  ggplot() +
  geom_histogram(aes(hwy), binwidth = 2)
```

## Your Turn 5

Make a density plot of `hwy` colored by `class`.

```{r}
mpg %>% 
  ggplot() +
    geom_density(mapping = aes(x = hwy, color = class))
```

## Your Turn 6

Make a bar chart `hwy` colored by `class`.

```{r}
mpg %>% 
  ggplot() +
  geom_bar(mapping = aes(x = class, color = class))
```

```{r}
mpg %>% 
  ggplot() +
  geom_bar(mapping = aes(x = class, fill = class))
```

## Your Turn 7

Predict what this code will do. Then run it.

```{r}
mpg %>% 
  ggplot() + 
  geom_point(aes(displ, hwy)) +
  geom_smooth(aes(displ, hwy))
```

## Your Turn 8

Save the last plot.

``` r
ggsave("mylastplot.png")
# or right-click the image
```
